/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.poo.view;

import fatec.poo.model.Cliente;
import fatec.poo.model.DateValidator;
import fatec.poo.model.DateValidatorUsingDateFormat;
import fatec.poo.model.ItemPedido;
import fatec.poo.model.Pedido;
import fatec.poo.model.Pessoa;
import fatec.poo.model.Produto;
import fatec.poo.model.Vendedor;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author laris
 */
public class GuiPedido extends javax.swing.JFrame {

    /**
     * Creates new form GuiPedido
     */
    public GuiPedido(ArrayList<Pedido> cadPed, 
            ArrayList<Pessoa> cadCliVend,
            ArrayList<Produto> cadProd) {
        initComponents();
        this.cadPed = cadPed;
        this.cadCliVend = cadCliVend;
        this.cadProd = cadProd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNrPedido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDataPedido = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxFormaPagamento = new javax.swing.JComboBox<>();
        btnPedido = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtCPFCliente = new javax.swing.JFormattedTextField();
        txtNomeCliente = new javax.swing.JTextField();
        btnCliente = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtCPFVendedor = new javax.swing.JFormattedTextField();
        btnVendedor = new javax.swing.JButton();
        txtNomeVendedor = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtCodProduto = new javax.swing.JTextField();
        btnProduto = new javax.swing.JButton();
        txtNomeProduto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQtdeVendida = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTotalPedido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQtdeItens = new javax.swing.JTextField();
        btnSair = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setText("NÃºmero do Pedido");

        txtNrPedido.setMinimumSize(new java.awt.Dimension(8, 20));

        jLabel2.setText("Data do Pedido");

        txtDataPedido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataPedido.setEnabled(false);
        txtDataPedido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataPedidoFocusLost(evt);
            }
        });

        jLabel3.setText("Forma de Pagamento");

        cbxFormaPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A vista", "A prazo" }));
        cbxFormaPagamento.setEnabled(false);
        cbxFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFormaPagamentoActionPerformed(evt);
            }
        });

        btnPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNrPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxFormaPagamento, 0, 110, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPedido)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNrPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(cbxFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel7.setText("CPF Cliente");

        try {
            txtCPFCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFCliente.setEnabled(false);

        txtNomeCliente.setEnabled(false);

        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnCliente.setEnabled(false);
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCliente)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtCPFCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Vendedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel8.setText("CPF Vendedor");

        try {
            txtCPFVendedor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPFVendedor.setEnabled(false);

        btnVendedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnVendedor.setEnabled(false);
        btnVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendedorActionPerformed(evt);
            }
        });

        txtNomeVendedor.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCPFVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNomeVendedor)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomeVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVendedor)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtCPFVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Itens do Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel9.setText("CÃ³digo do Produto");

        txtCodProduto.setEnabled(false);

        btnProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Consultar.png"))); // NOI18N
        btnProduto.setEnabled(false);
        btnProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProdutoActionPerformed(evt);
            }
        });

        txtNomeProduto.setEnabled(false);

        jLabel4.setText("Qtde Vendida");

        txtQtdeVendida.setEnabled(false);

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Inserir.png"))); // NOI18N
        btnAdicionar.setText("Adicionar Item");
        btnAdicionar.setEnabled(false);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Remover.png"))); // NOI18N
        btnRemover.setText("Remover Item");
        btnRemover.setEnabled(false);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "DescriÃ§Ã£o", "PreÃ§o Unit.", "Qtde Vendida", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableProdutos);

        jLabel5.setText("Valor Total do Pedido");

        txtTotalPedido.setEnabled(false);

        jLabel6.setText("Quantidade de Itens Pedidos");

        txtQtdeItens.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtdeVendida))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(btnAdicionar)
                                .addGap(18, 18, 18)
                                .addComponent(btnRemover))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTotalPedido)
                                    .addComponent(txtQtdeItens, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))))))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdicionar, btnRemover});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtQtdeVendida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnProduto)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtQtdeItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Sair.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Remover.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Alterar.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setEnabled(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Inserir.png"))); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.setEnabled(false);
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIncluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(btnSair))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnExcluir, btnIncluir, btnSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnExcluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnIncluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed
    /*
    ApÃ³s apertar o botÃ£o de consulta, Ã© verificado se o pedido consta no
    ArrayList de pedidos.
    Caso tenha o pedido, os campos de data, forma de paga-
    mento, nome e CPF do vendedor e cliente e itens do pedido sÃ£o preenchidos,
    alÃ©m dos botÃµes remover, alterar e excluir serem habitados. HÃ¡ tambÃ©m um 
    ArrayList para rastrear as alteraÃ§Ãµes para persisti-las caso a confimaÃ§Ã£o
    seja feita.
    Caso nÃ£o exista um pedido no ArrayList, a data Ã© habilitada para a ediÃ§Ã£o.
    */
    //testar remocao de itens caso jÃ¡ tenha
    private void btnPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidoActionPerformed
        CPedido = cadPed.stream().filter(item -> 
                item.getNumero().equals(txtNrPedido.getText())).
                findFirst().orElse(null);
        
        if(CPedido != null){
            
            txtDataPedido.setText(CPedido.getDataEmissao());
            int indiceFormaPagto = CPedido.isFormaPagto() ? 1 : 0;
            cbxFormaPagamento.setSelectedIndex(indiceFormaPagto);
            
            txtCPFCliente.setText(CPedido.getCliente().getCpf());
            txtNomeCliente.setText(CPedido.getCliente().getNome());
            
            txtCPFVendedor.setText(CPedido.getVendedor().getCpf());
            txtNomeVendedor.setText(CPedido.getVendedor().getNome());
            
            DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
            double valorTotal = 0;
            int qtdeItensPedido = 0;
            for(ItemPedido itemPedido: CPedido.getItensPedido()){
                model.addRow(new Object[]{
                    itemPedido.getProduto().getCodigo(),
                    itemPedido.getProduto().getDescricao(),
                    itemPedido.getProduto().getPreco(),
                    itemPedido.getQtdeVendida(),
                    itemPedido.getProduto().getPreco() 
                            * itemPedido.getQtdeVendida()
                });
                qtdeItensPedido++ ;
                valorTotal += itemPedido.getProduto().getPreco() 
                        * itemPedido.getQtdeVendida();
            }
            txtTotalPedido.setText(String.valueOf(valorTotal));
            txtQtdeItens.setText(String.valueOf(qtdeItensPedido));
            
            btnPedido.setEnabled(false);
            
            txtCodProduto.setEnabled(true);
            btnProduto.setEnabled(true);
            
            btnRemover.setEnabled(true);
            btnAlterar.setEnabled(true);
            btnExcluir.setEnabled(true);
            
            
            alteracoesPedido = CPedido.getItensPedido();
        }else{
            btnPedido.setEnabled(false);
            txtDataPedido.setEnabled(true);
        }
    }//GEN-LAST:event_btnPedidoActionPerformed
    /*
    Pesquisa o cliente no ArrayList com as pessoas.
    Se nÃ£o tiver, coloca uma mensagem de erro.
    Se tiver, coloca o nome e relaciona com o pedido, alÃ©m de liberar para o
    campo de vendedor.
    */
    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        Cliente cliente = (Cliente) cadCliVend.stream().
                filter(item -> 
                        item.getCpf().equals(txtCPFCliente.getText())).
                findFirst().orElse(null);
        if(cliente == null){
            JOptionPane.showMessageDialog(rootPane, 
                    "Confira o CPF do cliente e tente novamente", 
                    "Cliente InvÃ¡lido", 
                    JOptionPane.ERROR_MESSAGE);
            txtCPFCliente.requestFocus();
            return;
        }
        
        txtNomeCliente.setText(cliente.getNome());
        
        
        cliente.addPedido(CPedido); 
        
        txtDataPedido.setEnabled(false);
        btnCliente.setEnabled(false);
        txtCPFCliente.setEnabled(false);
        
        
        btnVendedor.setEnabled(true);
        txtCPFVendedor.setEnabled(true);
        
    }//GEN-LAST:event_btnClienteActionPerformed
    /*
    Pesquisa o vendedor no ArrayList com as pessoas.
    Se nÃ£o tiver, coloca uma mensagem de erro.
    Se tiver, coloca o nome e relaciona com o pedido, alÃ©m de liberar para o
    campo de produto.
    */
    private void btnVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendedorActionPerformed
        Vendedor vendedor = (Vendedor) cadCliVend.stream().
                filter(item -> 
                        item.getCpf().equals(txtCPFVendedor.getText())).
                findFirst().orElse(null);
        if(vendedor == null){
            JOptionPane.showMessageDialog(rootPane, 
                    "Confira o CPF do vendedor e tente novamente", 
                    "Vendedor InvÃ¡lido", 
                    JOptionPane.ERROR_MESSAGE);
            txtCPFVendedor.requestFocus();
            return;
        }
        
        txtNomeVendedor.setText(vendedor.getNome());
        
        vendedor.addPedido(CPedido); // aqui
        
        txtCPFVendedor.setEnabled(false);
        btnVendedor.setEnabled(false);
        
        txtCodProduto.setEnabled(true);
        btnProduto.setEnabled(true);
    }//GEN-LAST:event_btnVendedorActionPerformed
    /*
    Pesquisa o produto no ArrayList com os produtos.
    Se nÃ£o tiver, coloca uma mensagem de erro.
    Se tiver, coloca o nome e permite adicionar, alÃ©m de liberar para o
    campo de quantidade vendida.
    */
    private void btnProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProdutoActionPerformed
        Produto produto = cadProd.stream().
                filter(item -> 
                        item.getCodigo() == Integer.parseInt(txtCodProduto.getText())).
                findFirst().orElse(null);
        if(produto == null){
            JOptionPane.showMessageDialog(rootPane, 
                    "Confira o nÃºmero do produto e tente novamente", 
                    "Produto InvÃ¡lido", 
                    JOptionPane.ERROR_MESSAGE);
            txtCodProduto.requestFocus();
            return;
        }
        
        txtNomeProduto.setText(produto.getDescricao());
        btnAdicionar.setEnabled(true);
        btnRemover.setEnabled(true);
        txtQtdeVendida.setEnabled(true);
    }//GEN-LAST:event_btnProdutoActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        if(Double.parseDouble(txtQtdeVendida.getText()) <= 0){
            JOptionPane.showMessageDialog(rootPane, 
                    "NÃ£o Ã© possÃ­vel vender menos um produtudo ou nenhum", 
                    "Quantidade Vendida InvÃ¡lida", 
                    JOptionPane.ERROR_MESSAGE);
            txtQtdeVendida.requestFocus();
            return;
        }
        Produto produto = cadProd.stream().
                filter(item -> 
                        item.getCodigo() == Integer.parseInt(txtCodProduto.getText())).
                findFirst().orElse(null);
        Cliente cliente = (Cliente) cadCliVend.stream().
                filter(item -> 
                        item.getCpf().equals(txtCPFCliente.getText())).
                findFirst().orElse(null);
        
        if(Double.parseDouble(txtQtdeVendida.getText()) > produto.getQtdeEstoque()){
            JOptionPane.showMessageDialog(rootPane, 
                    "NÃ£o hÃ¡ quantidade suficiente em estoque", 
                    "Quantidade Vendida Muito Alta", 
                    JOptionPane.ERROR_MESSAGE);
            txtQtdeVendida.requestFocus();
            return;
        }
        
        if(Double.parseDouble(txtQtdeVendida.getText()) * produto.getPreco() >
                cliente.getLimiteDisp()){
            JOptionPane.showMessageDialog(rootPane, 
                    "O limite disponÃ­vel do cliente Ã© insuficiente", 
                    "Limite disponÃ­vel insuficiente", 
                    JOptionPane.ERROR_MESSAGE);
            txtQtdeVendida.requestFocus();
            return;
        }
 
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
                    
        double valorTotal = 0;
        int qtdeItensPedido = 0;
        for(ItemPedido i: CPedido.getItensPedido()){ //aqui
            qtdeItensPedido++ ;
            valorTotal += i.getProduto().getPreco() 
                    * i.getQtdeVendida();
        }
        
        qtdeItensPedido++;
        
        ItemPedido itemPedido = new ItemPedido(
                qtdeItensPedido,
                Double.parseDouble(txtQtdeVendida.getText()),
                produto);
        valorTotal += itemPedido.getProduto().getPreco() 
                    * itemPedido.getQtdeVendida();
        
        if(cadPed.contains(CPedido)){
           alteracoesPedido.add(itemPedido);
        }else{
            CPedido.addItemPedido(itemPedido);
        }
        
        txtTotalPedido.setText(String.valueOf(valorTotal));
        txtQtdeItens.setText(String.valueOf(qtdeItensPedido));
        
        
      
        model.addRow(new Object[]{
            itemPedido.getProduto().getCodigo(),
            itemPedido.getProduto().getDescricao(),
            itemPedido.getProduto().getPreco(),
            itemPedido.getQtdeVendida(),
            itemPedido.getProduto().getPreco() 
                    * itemPedido.getQtdeVendida()
        });
        if(!cadPed.contains(CPedido)){
            btnIncluir.setEnabled(true);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed
    /*
    A validaÃ§Ã£o da data quando o usuÃ¡rio perde o foco e, caso esteja vÃ¡lida, 
    cria um pedido novo.
    */
    private void txtDataPedidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataPedidoFocusLost
        DateValidator validator = new DateValidatorUsingDateFormat("dd/MM/yyyy");
        String data = txtDataPedido.getText();
        if(!validator.isValid(data)){
            JOptionPane.showMessageDialog(rootPane, 
                    "Verifique a data e tente novamente", 
                    "Data incoerente", 
                    JOptionPane.ERROR_MESSAGE);
            txtDataPedido.requestFocus();
            return;
        }
        CPedido = new Pedido(txtNrPedido.getText(), 
                txtDataPedido.getText());
        
        txtDataPedido.setEnabled(false);
        txtDataPedido.setText(data);
        
        cbxFormaPagamento.setEnabled(true);
        
        txtCPFCliente.setEnabled(true);
        btnCliente.setEnabled(true);
    }//GEN-LAST:event_txtDataPedidoFocusLost
    /*
    Inclui o pedido no ArrayList de pedidos e volta ao estado inicial.
    Todos os campos sÃ£o zerados, tabela esvaziada e botÃµes reconfigurados.
    */
    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        
        cadPed.add(CPedido);
        txtNrPedido.setText(null);
        btnPedido.setEnabled(true);
        txtDataPedido.setText(null);
        txtDataPedido.setEnabled(false);
        cbxFormaPagamento.setEnabled(false);
        
        txtCPFCliente.setText(null);
        btnCliente.setEnabled(false);
        txtNomeCliente.setText(null);
        
        txtCPFVendedor.setText(null);
        btnVendedor.setEnabled(false);
        txtNomeVendedor.setText(null);
        
        txtCodProduto.setText(null);
        txtCodProduto.setEnabled(false);
        btnProduto.setEnabled(false);
        txtNomeProduto.setText(null);
        txtQtdeVendida.setText(null);
        txtQtdeVendida.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
        model.setRowCount(0);
        btnAdicionar.setEnabled(false);
        btnRemover.setEnabled(false);
        txtTotalPedido.setText(null);
        txtQtdeItens.setText(null);
        
        
        btnIncluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnIncluirActionPerformed
    /*
    Atualiza a forma de pagamento de acordo com o que usuÃ¡rio muda.
    */
    private void cbxFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFormaPagamentoActionPerformed
        boolean forma = cbxFormaPagamento.getSelectedIndex() == 1;
        CPedido.setFormaPagto(forma);
    }//GEN-LAST:event_cbxFormaPagamentoActionPerformed
    /*
    Atualiza os registros de ItemPedido de acordo com o ArrayList que rastreia
    as mudanÃ§as. Se hÃ¡ um registro nas alteraÃ§Ãµes que nÃ£o existe no original, 
    ele Ã© adicionado. Se no original hÃ¡ algum pedido que nÃ£o hÃ¡ nas alteraÃ§Ãµes,
    ele Ã© excluÃ­do.
    Todos os campos sÃ£o zerados, tabela esvaziada e botÃµes reconfigurados.
    */
    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        alteracoesPedido.stream().filter(ip -> (
                !CPedido.getItensPedido().contains(ip))).forEachOrdered(ip -> {
            CPedido.getItensPedido().add(ip);
        });
        
        CPedido.getItensPedido().stream().filter(ip -> (
                !alteracoesPedido.contains(ip))).forEachOrdered(ip -> {
            CPedido.getItensPedido().remove(ip);
        });
        
        txtNrPedido.setText(null);
        btnPedido.setEnabled(true);
        txtDataPedido.setText(null);
        txtDataPedido.setEnabled(false);
        cbxFormaPagamento.setEnabled(false);
        
        txtCPFCliente.setText(null);
        btnCliente.setEnabled(false);
        txtNomeCliente.setText(null);
        
        txtCPFVendedor.setText(null);
        btnVendedor.setEnabled(false);
        txtNomeVendedor.setText(null);
        
        txtCodProduto.setText(null);
        txtCodProduto.setEnabled(false);
        btnProduto.setEnabled(false);
        txtNomeProduto.setText(null);
        txtQtdeVendida.setText(null);
        txtQtdeVendida.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
        model.setRowCount(0);
        btnAdicionar.setEnabled(false);
        btnRemover.setEnabled(false);
        txtTotalPedido.setText(null);
        txtQtdeItens.setText(null);
        
        
        btnIncluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnAlterarActionPerformed
    /*
    Remove o registro atual do ArrayList com os pedidos.
    Todos os campos sÃ£o zerados, tabela esvaziada e botÃµes reconfigurados.
    */
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        cadPed.remove(CPedido);
        
        txtNrPedido.setText(null);
        btnPedido.setEnabled(true);
        txtDataPedido.setText(null);
        txtDataPedido.setEnabled(false);
        cbxFormaPagamento.setEnabled(false);
        
        txtCPFCliente.setText(null);
        btnCliente.setEnabled(false);
        txtNomeCliente.setText(null);
        
        txtCPFVendedor.setText(null);
        btnVendedor.setEnabled(false);
        txtNomeVendedor.setText(null);
        
        txtCodProduto.setText(null);
        txtCodProduto.setEnabled(false);
        btnProduto.setEnabled(false);
        txtNomeProduto.setText(null);
        txtQtdeVendida.setText(null);
        txtQtdeVendida.setEnabled(false);
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
        model.setRowCount(0);
        btnAdicionar.setEnabled(false);
        btnRemover.setEnabled(false);
        txtTotalPedido.setText(null);
        txtQtdeItens.setText(null);
        
        
        btnIncluir.setEnabled(false);
        btnAlterar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }//GEN-LAST:event_btnExcluirActionPerformed
    /*
    O Ã­ndice da linha selecionada Ã© armazenado. Caso nÃ£o tenha uma linha
    selecionada, uma mensagem de erro Ã© disparada.
    Se o registro for antigo (estiver no ArrayList de pedidos), as alteraÃ§Ãµes 
    vÃ£o para o ArrayList de alteraÃ§Ãµes. Caso contrÃ¡rio, o prÃ³prio registro Ã©
    alterado.
    O ItemProduto a ser excluÃ­do Ã© identificado por meio de uma comparaÃ§Ã£o entre
    o cÃ³digo do produto e seu subtotal, jÃ¡ que se houverem 2 ou mais registros 
    com o mesmo cÃ³digo e subtotal, Ã© indiferente qual Ã© deletado.
    */
    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableProdutos.getModel();
        int index = jTableProdutos.getSelectedRow();
        if(index == -1){
            JOptionPane.showMessageDialog(rootPane, 
                    "Selecione um item", 
                    "Nenhum item selecionado", 
                    JOptionPane.ERROR_MESSAGE);
            txtQtdeVendida.requestFocus();
            return;
        }
         
        
        ArrayList<ItemPedido> itensPedido = cadPed.contains(CPedido)?
                alteracoesPedido: CPedido.getItensPedido();
       
        ItemPedido ip;
        ip = itensPedido.stream().filter(
                item -> (Double)jTableProdutos.getValueAt(index, 4) == item.getProduto().getPreco() * item.getQtdeVendida() &&
                        (Integer)jTableProdutos.getValueAt(index, 0) == item.getProduto().getCodigo()).findFirst().orElse(null);
        
        // Atualiza estoque
        
        ip.getProduto().setQtdeEstoque(ip.getProduto().getQtdeEstoque() - 
                ip.getQtdeVendida());
        // Atualiza crÃ©dito
        
        ip.getPedido().getCliente().setLimiteDisp(
                ip.getPedido().getCliente().getLimiteDisp() + 
                        ip.getQtdeVendida() * ip.getProduto().getPreco());
        
        txtTotalPedido.setText(String.valueOf(
                Double.parseDouble(txtTotalPedido.getText()) -
                ip.getProduto().getPreco()*ip.getQtdeVendida()));
        txtQtdeItens.setText(String.valueOf(
                Integer.parseInt(txtQtdeItens.getText()) - 1));
        itensPedido.remove(ip);
        
        model.removeRow(index);
    }//GEN-LAST:event_btnRemoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCliente;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPedido;
    private javax.swing.JButton btnProduto;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVendedor;
    private javax.swing.JComboBox<String> cbxFormaPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JFormattedTextField txtCPFCliente;
    private javax.swing.JFormattedTextField txtCPFVendedor;
    private javax.swing.JTextField txtCodProduto;
    private javax.swing.JFormattedTextField txtDataPedido;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeProduto;
    private javax.swing.JTextField txtNomeVendedor;
    private javax.swing.JTextField txtNrPedido;
    private javax.swing.JTextField txtQtdeItens;
    private javax.swing.JTextField txtQtdeVendida;
    private javax.swing.JTextField txtTotalPedido;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Pedido> cadPed = new ArrayList<Pedido>();
    private ArrayList<Pessoa> cadCliVend = new ArrayList<Pessoa>();
    private ArrayList<Produto> cadProd = new ArrayList<Produto>();
    private ArrayList<ItemPedido> alteracoesPedido;
    private Pedido CPedido;
    
}
